(()=>{"use strict";class s extends HTMLElement{constructor(){super(),this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.canvasWidth=28,this.canvasHeight=28,this.mousePosition={x:0,y:0}}render(){this.resizeCanvas(),this.addOutlineOnCanvas(),this.expandCanvasSize(140,140),this.appendChild(this.canvas)}draw(s){if(1!==s.buttons)return 0;this.ctx.beginPath(),this.ctx.lineWidth=4,this.ctx.lineCap="round",this.ctx.strokeStyle="#000000",this.ctx.moveTo(this.mousePosition.x,this.mousePosition.y),this.setMousePosition(s),this.ctx.lineTo(this.mousePosition.x,this.mousePosition.y),this.ctx.stroke()}setMousePosition(s){console.log(s),this.mousePosition.x=s.clientX/5,this.mousePosition.y=s.clientY/5}resizeCanvas(){this.canvas.width=this.canvasWidth,this.canvas.height=this.canvasHeight}addOutlineOnCanvas(){this.canvas.style.outlineStyle="solid"}expandCanvasSize(s,t){this.canvas.style.width=`${s}px`,this.canvas.style.height=`${t}px`}handleMousemove(s){this.draw(s)}handleMousedown(s){this.setMousePosition(s)}handleMouseenter(s){this.setMousePosition(s)}connectedCallback(){this.render(),this.addEventListener("mousemove",this.draw.bind(this)),this.addEventListener("mousedown",this.handleMousedown.bind(this)),this.addEventListener("mouseenter",this.handleMouseenter.bind(this))}}customElements.define("draw-number",s)})();